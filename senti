package com.example.sentiment;

import edu.stanford.nlp.pipeline.*;
import edu.stanford.nlp.ling.*;
import edu.stanford.nlp.sentiment.SentimentCoreAnnotations;
import org.springframework.web.bind.annotation.*;

import java.util.*;

@RestController
@RequestMapping("/api/sentiment")
public class SentimentAnalysisService {
    private final StanfordCoreNLP pipeline;

    public SentimentAnalysisService() {
        // Load Stanford NLP pipeline
        Properties props = new Properties();
        props.setProperty("annotators", "tokenize, ssplit, parse, sentiment");
        this.pipeline = new StanfordCoreNLP(props);
    }

    @PostMapping("/analyze")
    public Map<String, Object> analyzeSentiment(@RequestBody List<String> statements) {
        Map<String, Object> response = new HashMap<>();
        Map<String, Integer> sentimentCounts = new HashMap<>();

        for (String statement : statements) {
            String sentiment = getSentiment(statement);
            response.put(statement, sentiment);
            sentimentCounts.put(sentiment, sentimentCounts.getOrDefault(sentiment, 0) + 1);
        }

        response.put("distribution", sentimentCounts);
        return response;
    }

    private String getSentiment(String text) {
        Annotation annotation = new Annotation(text);
        pipeline.annotate(annotation);

        for (CoreMap sentence : annotation.get(CoreAnnotations.SentencesAnnotation.class)) {
            String sentiment = sentence.get(SentimentCoreAnnotations.SentimentClass.class);
            return sentiment;
        }
        return "Neutral";
    }
}
